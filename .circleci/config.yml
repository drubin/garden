# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build-go:
    docker:
      - image: circleci/golang:1.10
    working_directory: /go/src/github.com/garden-io/garden
    steps:
      - checkout
      - restore_cache:
          keys:
            - pkg-cache-{{ checksum "Gopkg.lock" }}
      - run:
          name: Install dep
          command: |
            if [ ! -d /go/src/github.com/garden-io/garden/vendor ]; then
                curl -L -s https://github.com/golang/dep/releases/download/v0.4.1/dep-linux-amd64 -o /go/bin/dep
                chmod +x /go/bin/dep
                /go/bin/dep ensure
            fi
      - save_cache:
          key: pkg-cache-{{ checksum "Gopkg.lock" }}
          paths:
            - "/go/src/github.com/garden-io/garden/vendor"
      - run:
          name: Build All
          command: |
            cd garden-cli
            package_name="garden"
            platforms=("windows/amd64" "windows/386" "darwin/amd64" "linux/amd64")
            for platform in "${platforms[@]}"
            do
                platform_split=(${platform//\// })
                GOOS=${platform_split[0]}
                GOARCH=${platform_split[1]}
                output_name=$package_name'-'$GOOS'-'$GOARCH
                if [ $GOOS = "windows" ]; then
                    output_name+='.exe'
                fi

                env GOOS=$GOOS GOARCH=$GOARCH go build -o build/$output_name
                if [ $? -ne 0 ]; then
                    echo 'An error has occurred! Aborting the script execution...'
                    exit 1
                fi
            done
      - store_artifacts:
          path: garden-cli/build
          destination: /downloads
  test-node:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run: sudo apt-get update && sudo apt-get install rsync
      - setup_remote_docker:
          docker_layer_caching: true
      # Download and cache dependencies
      - restore_cache:
          keys:
          - root-{{ checksum "package-lock.json" }}
      - restore_cache:
          keys:
          - garden-service-{{ checksum "garden-service/package-lock.json" }}
      # Install npm deps
      - run: npm ci
      - run: node_modules/.bin/lerna bootstrap --ci
      - save_cache:
          paths: [node_modules]
          key: root-{{ checksum "package-lock.json" }}
      - save_cache:
          paths: [garden-service/node_modules]
          key: garden-service-{{ checksum "garden-service/package-lock.json" }}

      - run:
          name: Make sure generated docs are up-to-date
          command: |
            npm run generate-docs
            npm run check-docs

      # build, lint and run tests
      - run:
          name: ci-build
          command: npm run ci-build
      - run:
          name: npm run lint
          command: npm run lint
      - run:
          name: npm test
          command: npm run ci-test
  publish-latest:
    docker:
      - image: 18.06.1-ce-git
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - name: Docker login
        command: |
          docker login -u $DOCKER_USER -p $DOCKER_PASS
      - name: Build and publish docker-sync
        command: |
          docker build -t drubin/garden-sync:latest garden-sync
          docker build -t drubin/garden-service:latest garden-service
          docker push drubin/garden-sync:latest
          docker push drubin/garden-service:latest

workflows:
  version: 2
  all-tests:
    jobs:
      - build-go
      - test-node
  publish-latest:
    jobs: [publish-latest]
    filters:
      branches:
        only:
          - master
