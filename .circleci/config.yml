# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:10

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: Install apt dependencies
          command: sudo apt install rsync cmake libicu-dev pkg-config

      - run:
          name: Install kubectl
          command: |
            curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.10.0/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v3-dependencies-{{ checksum "package-lock.json" }}

      # install using package-lock only
      - run: npm ci
      - run: node_modules/.bin/lerna bootstrap --ci

      - save_cache:
          paths:
            - node_modules
            - garden-cli/node_modules
          key: v3-dependencies-{{ checksum "package-lock.json" }}

      # a couple of special cases needed just for local builds
      - run: |
          if [[ $CIRCLE_SHELL_ENV == *"localbuild"* ]]; then
            sudo chown $(whoami): /var/run/docker.sock
            npm rebuild
          fi

      - run:
          name: Make sure generated docs are up-to-date
          command: |
            npm run generate-docs
            npm run check-docs

      # build, lint and run tests
      - run: npm run build
      - run: npm run lint
      - run: npm test

  minikube-tests:
    machine: true
    environment:
      CHANGE_MINIKUBE_NONE_USER: true
      K8S_VERSION: v1.10.0
      MINIKUBE_VERSION: v0.28.2
    steps:
      - checkout
      - run:
          command: |
            git clone https://github.com/google/jsonnet.git
            cd jsonnet && make && sudo cp jsonnet /usr/local/bin/
      - run:
          command: |
            go get github.com/jsonnet-bundler/jsonnet-bundler/cmd/jb
            go get github.com/brancz/gojsontoyaml
      - run:
          name: setup kubectl
          command: |
            curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/${K8S_VERSION}/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
      - run:
          name: setup minikube
          command: |
            curl -Lo minikube https://github.com/kubernetes/minikube/releases/download/${MINIKUBE_VERSION}/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
      - run:
          command: |
            # TODO: remove the --bootstrapper flag once this issue is solved: https://github.com/kubernetes/minikube/issues/2704
            sudo minikube config set WantReportErrorPrompt false
            sudo -E minikube start --vm-driver=none --bootstrapper=localkube --kubernetes-version=${K8S_VERSION} --extra-config=kubelet.authentication-token-webhook=true --extra-config=kubelet.authorization-mode=Webhook --extra-config=scheduler.address=0.0.0.0 --extra-config=controller-manager.address=0.0.0.0
      - run:
          command: |
            JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until sudo kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done
      - run:
          command: |
            sudo kubectl cluster-info
      - run:
          name: show running pods
          command: |
            sleep 60
            kubectl get pods --all-namespaces
workflows:
 version: 2
 all-tests:
   jobs:
     - unit-tests
     - minikube-tests
